#!/bin/bash

## Copyright (C) 2021 - 2022 ENCRYPTED SUPPORT LP <adrelanos@whonix.org>
## See the file COPYING for copying conditions.

#### meta start
#### project Whonix
#### category tor and usability
#### gateway_only yes
#### description
## Tor log parsing command line utility.
#### meta end

cmd="journalctl -b --no-pager --output cat -u tor.service"
log1="$($cmd)"

cmd="cat /run/tor/log"
log2="$($cmd)"

cmd="journalctl -b --no-pager --output cat -u vanguards.service"
log3="$($cmd)"
if [ "$log3" = "" ]; then
   echo "ERROR: Running command:

$cmd

failed! This program needs to be run as root:

sudo $0

or this user '$(whoami)' needs to be a member of group 'systemd-journal'.

sudo addgroup $(whoami) systemd-journal

Exiting."
   exit 1
fi

log_full="\
tor.service:

$log1

/run/tor/log:

$log2

vanguards.service:

$log3"

## https://www.whonix.org/wiki/Tor#Non-Issues
log_full="$(echo "$log_full" | grep --invert-match "\[notice\] Opening HTTP tunnel listener")"
log_full="$(echo "$log_full" | grep --invert-match "\[notice\] Opened HTTP tunnel listener")"
log_full="$(echo "$log_full" | grep --invert-match "\[notice\] Opened Socks listener")"
log_full="$(echo "$log_full" | grep --invert-match "\[notice\] Opening Socks listener")"
log_full="$(echo "$log_full" | grep --invert-match "\[notice\] Opening DNS listener")"
log_full="$(echo "$log_full" | grep --invert-match "\[notice\] Opened DNS listener")"
log_full="$(echo "$log_full" | grep --invert-match "\[notice\] Opening Transparent pf/netfilter listener")"
log_full="$(echo "$log_full" | grep --invert-match "\[notice\] Opened Transparent pf/netfilter listener")"
log_full="$(echo "$log_full" | grep --invert-match "\[notice\] Opening Control listener on /run/tor/control")"
log_full="$(echo "$log_full" | grep --invert-match "\[notice\] Opened Control listener on /run/tor/control")"

log_full="$(echo "$log_full" | grep --invert-match "\[notice\] You configured a non-loopback address")"
log_full="$(echo "$log_full" | grep --invert-match "opening log file")"
log_full="$(echo "$log_full" | grep --invert-match "\[notice\] Parsing GEOIP IPv4 file /usr/share/tor/geoip.")"
log_full="$(echo "$log_full" | grep --invert-match "\[notice\] Parsing GEOIP IPv6 file /usr/share/tor/geoip6.")"

log_full="$(echo "$log_full" | grep --invert-match "\[notice\] New control connection opened.")"
log_full="$(echo "$log_full" | grep --invert-match "\[warn\] Socks version 71 not recognized. (This port is not an HTTP proxy; did you want to use HTTPTunnelPort?)")"

## Use anon-verify instead.
## https://www.whonix.org/wiki/Tor#Configuration_Check
log_full="$(echo "$log_full" | grep --invert-match "\[notice\] Read configuration file")"
log_full="$(echo "$log_full" | grep --invert-match "\[notice\] Including configuration file")"
log_full="$(echo "$log_full" | grep --invert-match "\[notice\] Processing configuration path")"

log_full="$(echo "$log_full" | grep --invert-match "\[notice\] Option 'DisableNetwork' used more than once; all but the last value will be ignored.")"
log_full="$(echo "$log_full" | grep --invert-match "\[warn\] Option 'ClientOnionAuthDir' used more than once; all but the last value will be ignored.")"
log_full="$(echo "$log_full" | grep --invert-match "\[warn\] Option 'DisableNetwork' used more than once; all but the last value will be ignored.")"

echo "$log_full"
